{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { infected } from \"../../../../../api/infected\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const [infectedPeople, setInfectedPeople] = useState();\n  useEffect(() => {\n    infected.getInfected().then(response => {\n      setInfectedPeople(response);\n    });\n  }, []);\n  console.log(infectedPeople);\n\n  const getDates = date => {\n    const dates = [];\n    console.log(date);\n\n    if (!dates.includes(date)) {\n      dates.push(date);\n    }\n\n    console.log(dates);\n    return dates;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '10vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '50vh',\n        width: '80%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: infectedPeople && infectedPeople.map(infected => getDates(infected.infect_date)),\n          datasets: [{\n            label: 'Progresion contagios',\n            data: [0, 0, 45, 0, 0, 10, 1, 0, 0, 0],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 50,\n        width: 100,\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"k9kuneOE3F05VNdrfQxI7/hE4ic=\");\n\n_c = Chart;\nexport { Chart };\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Infected/components/Chart.js"],"names":["React","useEffect","useState","Line","infected","Chart","infectedPeople","setInfectedPeople","getInfected","then","response","console","log","getDates","date","dates","includes","push","marginTop","height","width","margin","labels","map","infect_date","datasets","label","data","backgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,EAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,CAACI,WAAT,GAAuBC,IAAvB,CAA6BC,QAAD,IAAc;AACtCH,MAAAA,iBAAiB,CAACG,QAAD,CAAjB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;;AAEA,QAAMO,QAAQ,GAAIC,IAAD,IAAU;AACvB,UAAMC,KAAK,GAAG,EAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AACA,QAAI,CAACC,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAL,EAA2B;AACvBC,MAAAA,KAAK,CAACE,IAAN,CAAWH,IAAX;AACH;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,WAAQA,KAAR;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,KAAzB;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OAAZ;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAEhB,cAAc,IAAIA,cAAc,CAACiB,GAAf,CAAoBnB,QAAD,IAAcS,QAAQ,CAACT,QAAQ,CAACoB,WAAV,CAAzC,CADxB;AAEFC,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,sBADX;AAEIC,YAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,EAAc,CAAd,EAAiB,EAAjB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAFV;AAGIC,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WADM;AAFR,SADV;AA2BI,QAAA,MAAM,EAAE,EA3BZ;AA4BI,QAAA,KAAK,EAAE,GA5BX;AA6BI,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAE,KADhB;AAELC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,CACH;AACIC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,WAAW,EAAE;AADV;AADX,aADG;AADH;AAFH;AA7Bb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CAtED;;GAAM9B,K;;KAAAA,K;AAwEN,SAASA,KAAT","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { infected } from \"../../../../../api/infected\";\r\n\r\nconst Chart = () => {\r\n\r\n    const [infectedPeople, setInfectedPeople] = useState();\r\n\r\n    useEffect(() => {\r\n        infected.getInfected().then((response) => {\r\n            setInfectedPeople(response);\r\n        })\r\n    }, []);\r\n\r\n    console.log(infectedPeople)\r\n\r\n    const getDates = (date) => {\r\n        const dates = [];\r\n        console.log(date)\r\n        if (!dates.includes(date)) {\r\n            dates.push(date)\r\n        }\r\n        console.log(dates)\r\n        return (dates)\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: '10vh' }}>\r\n            <div style={{ height: '50vh', width: '80%', margin: 'auto' }}>\r\n                <Line\r\n                    data={{\r\n                        labels: infectedPeople && infectedPeople.map((infected) => getDates(infected.infect_date)),\r\n                        datasets: [\r\n                            {\r\n                                label: 'Progresion contagios',\r\n                                data: [0, 0, 45, 0, 0, 10, 1, 0, 0, 0],\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n                            },\r\n                        ]\r\n                    }}\r\n                    height={50}\r\n                    width={100}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport { Chart }"]},"metadata":{},"sourceType":"module"}