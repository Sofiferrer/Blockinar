{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\components\\\\BasicTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicTable = ({\n  datos,\n  columnas\n}) => {\n  _s();\n\n  const columns = useMemo(() => columnas, []);\n  const data = useMemo(() => datos, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}`\n            },\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 52\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\nexport { BasicTable };\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Infected/components/BasicTable.js"],"names":["React","useMemo","useTable","BasicTable","datos","columnas","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","backgroundColor","infected","live","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAExC,QAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMI,QAAP,EAAiB,EAAjB,CAAvB;AACA,QAAME,IAAI,GAAGN,OAAO,CAAC,MAAMG,KAAP,EAAc,EAAd,CAApB;AAEA,QAAMI,aAAa,GAAGN,QAAQ,CAAC;AAC3BI,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,CAA9B;AAKA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MAAuEL,aAA7E;AAEA,sBACI;AAAA,2BACI,sBAAWC,aAAa,EAAxB;AAAA,8BACI;AAAA,kBACKE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,sBAAWV,iBAAiB,EAA5B;AAAA,kBAEQE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAS;AACdR,UAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,8BACI;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAG,GAAEC,QAAQ,CAACC,IAAT,GAAgB,OAAhB,GAA0B,yBAA0B;AAA1E,aAAX;AAAA,eAA8FH,GAAG,CAACI,WAAJ,EAA9F;AAAA,sBAEQJ,GAAG,CAACK,KAAJ,CAAUZ,GAAV,CAAea,IAAD,IAAU;AACpB,kCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACP,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,SAXD;AAFR;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA7CD;;GAAMjB,U;UAKoBD,Q;;;KALpBC,U;AA+CN,SAASA,UAAT","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useTable } from 'react-table'\r\n\r\n\r\n\r\nconst BasicTable = ({ datos, columnas }) => {\r\n\r\n    const columns = useMemo(() => columnas, [])\r\n    const data = useMemo(() => datos, [])\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n    })\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance\r\n\r\n    return (\r\n        <div>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map(column => (\r\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        rows.map((row) => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr style={{ backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}` }} {...row.getRowProps()}>\r\n                                    {\r\n                                        row.cells.map((cell) => {\r\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { BasicTable }"]},"metadata":{},"sourceType":"module"}