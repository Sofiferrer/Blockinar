{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\client\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'; //import { api } from \"../../../../../api/api\"\n\nimport { getCurrentDate } from \"../../../../../helpers/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalForm = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [country, setCountry] = useState('');\n  const [age, setAge] = useState('');\n  const [live, setLive] = useState('');\n  const [female, setFemale] = useState(''); // const infectedPerson = {\n  //     first_name: firstName,\n  //     last_name: lastName,\n  //     country: country,\n  //     live: live,\n  //     age: age,\n  //     female: female\n  // }\n  // const infectedPerson = {\n  //     first_name: firstName,\n  //     last_name: lastName,\n  //     country: country,\n  //     live: live,\n  //     age: age,\n  //     infect_date: getCurrentDate(),\n  //     gendre: female\n  // }\n  // const handleSubmit = async () => {\n  //     if (firstName && lastName) {\n  //         await api({\n  //             method: \"POST\",\n  //             headers: {\n  //                 'Content-Type': 'Application/json'\n  //             },\n  //             url: \"/infected\",\n  //             body: JSON.stringify(infectedPerson),\n  //         })\n  //         handleClose();\n  //     } else {\n  //         alert('Los campos Nombre y Apellido son obligatorios')\n  //     }\n  // }\n\n  const handleSubmit = () => {\n    axios.post(\"http://localhost:3050/api/infected\", {\n      first_name: firstName,\n      last_name: lastName,\n      country: country,\n      live: live,\n      age: age,\n      infect_date: getCurrentDate(),\n      gendre: female\n    }).then(() => {\n      console.log(\"Carga exitosa\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-evenly'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"info\",\n      onClick: handleShow,\n      children: \"Agregar infectado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactHTMLTableToExcel, {\n        id: \"exportButton\",\n        className: \"btn btn-success\",\n        table: \"dataTable\",\n        filename: \"Tabla-Infectados\",\n        sheet: \"Infectados\",\n        buttonText: \"Exportar Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Complete el formulario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                required: true,\n                placeholder: \"Nombre\",\n                onChange: event => setFirstName(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"lastName\",\n                id: \"lastName\",\n                required: true,\n                placeholder: \"Apellido\",\n                onChange: event => setLastName(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"age\",\n                id: \"age\",\n                placeholder: \"Edad\",\n                onChange: event => setAge(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"country\",\n                id: \"country\",\n                placeholder: \"Pais\",\n                onChange: event => setCountry(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  marginRight: \"20px\"\n                },\n                children: \"Sexo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                label: \"Mujer\",\n                name: \"group1\",\n                type: \"radio\",\n                \"aria-label\": \"mujer\",\n                value: \"Mujer\",\n                onChange: event => setFemale(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                label: \"Hombre\",\n                name: \"group1\",\n                type: \"radio\",\n                \"aria-label\": \"hombre\",\n                value: \"Hombre\",\n                onChange: event => setFemale(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  marginRight: \"40px\"\n                },\n                children: \"Vive:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                label: \"Si\",\n                name: \"group2\",\n                type: \"radio\",\n                \"aria-label\": \"siVive\",\n                value: \"true\",\n                onChange: event => setLive(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                label: \"No\",\n                name: \"group2\",\n                type: \"radio\",\n                \"aria-label\": \"noVive\",\n                value: \"false\",\n                onChange: event => setLive(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleSubmit,\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalForm, \"nhpgypdxbhENUQlQDYj2q1MNGCQ=\");\n\n_c = ModalForm;\nexport { ModalForm };\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/client/src/screens/Home/components/Infected/components/Form.js"],"names":["axios","React","useState","Modal","Button","Form","Col","Row","ReactHTMLTableToExcel","getCurrentDate","ModalForm","show","setShow","handleClose","handleShow","firstName","setFirstName","lastName","setLastName","country","setCountry","age","setAge","live","setLive","female","setFemale","handleSubmit","post","first_name","last_name","infect_date","gendre","then","console","log","display","justifyContent","event","target","value","marginRight"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'\r\n//import { api } from \"../../../../../api/api\"\r\nimport { getCurrentDate } from \"../../../../../helpers/functions\";\r\n\r\nconst ModalForm = () => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [live, setLive] = useState('');\r\n    const [female, setFemale] = useState('');\r\n\r\n    // const infectedPerson = {\r\n    //     first_name: firstName,\r\n    //     last_name: lastName,\r\n    //     country: country,\r\n    //     live: live,\r\n    //     age: age,\r\n    //     female: female\r\n    // }\r\n    // const infectedPerson = {\r\n    //     first_name: firstName,\r\n    //     last_name: lastName,\r\n    //     country: country,\r\n    //     live: live,\r\n    //     age: age,\r\n    //     infect_date: getCurrentDate(),\r\n    //     gendre: female\r\n    // }\r\n\r\n    // const handleSubmit = async () => {\r\n    //     if (firstName && lastName) {\r\n    //         await api({\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //                 'Content-Type': 'Application/json'\r\n    //             },\r\n    //             url: \"/infected\",\r\n    //             body: JSON.stringify(infectedPerson),\r\n    //         })\r\n    //         handleClose();\r\n    //     } else {\r\n    //         alert('Los campos Nombre y Apellido son obligatorios')\r\n    //     }\r\n    // }\r\n\r\n    const handleSubmit = () => {\r\n        axios.post(\"http://localhost:3050/api/infected\", {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            country: country,\r\n            live: live,\r\n            age: age,\r\n            infect_date: getCurrentDate(),\r\n            gendre: female\r\n        }).then(() => {\r\n            console.log(\"Carga exitosa\");\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n            <Button variant=\"info\" onClick={handleShow}>\r\n                Agregar infectado\r\n            </Button>\r\n            <div>\r\n                <ReactHTMLTableToExcel\r\n                    id='exportButton'\r\n                    className='btn btn-success'\r\n                    table='dataTable'\r\n                    filename='Tabla-Infectados'\r\n                    sheet='Infectados'\r\n                    buttonText='Exportar Excel'\r\n                />\r\n            </div>\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Complete el formulario</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Control type=\"text\" name=\"name\" id=\"name\"\r\n                                    required placeholder=\"Nombre\" onChange={(event) => setFirstName(event.target.value)} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control type=\"text\" name=\"lastName\" id=\"lastName\" required placeholder=\"Apellido\" onChange={(event) => setLastName(event.target.value)} />\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Control type=\"number\" name=\"age\" id=\"age\" placeholder=\"Edad\" onChange={(event) => setAge(event.target.value)} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control type=\"text\" name=\"country\" id=\"country\" placeholder=\"Pais\" onChange={(event) => setCountry(event.target.value)} />\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Label style={{ marginRight: \"20px\" }}>Sexo:</Form.Label>\r\n                                <Form.Check inline label=\"Mujer\" name=\"group1\" type=\"radio\" aria-label=\"mujer\" value=\"Mujer\" onChange={(event) => setFemale(event.target.value)} />\r\n                                <Form.Check inline label=\"Hombre\" name=\"group1\" type=\"radio\" aria-label=\"hombre\" value=\"Hombre\" onChange={(event) => setFemale(event.target.value)} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Label style={{ marginRight: \"40px\" }}>Vive:</Form.Label>\r\n                                <Form.Check inline label=\"Si\" name=\"group2\" type=\"radio\" aria-label=\"siVive\" value=\"true\" onChange={(event) => setLive(event.target.value)} />\r\n                                <Form.Check inline label=\"No\" name=\"group2\" type=\"radio\" aria-label=\"noVive\" value=\"false\" onChange={(event) => setLive(event.target.value)} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={handleClose}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button variant=\"info\" onClick={handleSubmit}>Agregar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { ModalForm };"]},"metadata":{},"sourceType":"module"}