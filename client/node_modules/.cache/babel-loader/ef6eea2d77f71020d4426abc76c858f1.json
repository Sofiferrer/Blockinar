{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\client\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Table, Button } from 'react-bootstrap';\nimport { getCurrentDate } from \"../../../../../helpers/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoTable = ({\n  data\n}) => {\n  _s();\n\n  const [infectedPeople, setInfectedPeople] = useState(data);\n  const [sortOrder, setSortOrder] = useState('asc');\n  const totalInfected = infectedPeople && infectedPeople.length;\n\n  const stringifyDate = miliseconds => {\n    const completeDate = new Date(miliseconds * 1000);\n    const year = completeDate.getFullYear();\n    const month = completeDate.getMonth() + 1;\n    const day = completeDate.getDate();\n    const date = `${day} / ${month} / ${year}`;\n    return date;\n  };\n\n  const getInfectedFromApi = () => {\n    axios.get('http://localhost:3050/infected').then(response => {\n      setInfectedPeople(response.data);\n    });\n  };\n\n  getInfectedFromApi();\n\n  const loadTable = list => {\n    return list && list.map(infected => /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: {\n        backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: stringifyDate(`${infected.infect_date}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: infected.first_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: infected.last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: infected.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: infected.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: infected.female ? \"Femenino\" : \"Masculino\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, infected.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n  };\n\n  const order = () => {\n    let tableData = [];\n\n    if (sortOrder === 'asc') {\n      tableData = infectedPeople.sort(function (a, b) {\n        return a.age - b.age;\n      });\n      setSortOrder('desc');\n    }\n\n    if (sortOrder === 'desc') {\n      tableData = infectedPeople.sort(function (a, b) {\n        return a.age < b.age ? 1 : -1;\n      });\n      setSortOrder('asc');\n    }\n\n    setInfectedPeople([...tableData]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        backgroundColor: 'rgb(87, 234, 154)',\n        textAlign: 'center',\n        marginBottom: '5vh'\n      },\n      children: [\"Cantidad de infectados al dia \", getCurrentDate(), \": \", totalInfected]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        id: \"dataTable\",\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha contagio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Apellido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"Edad\", /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  padding: '0',\n                  marginLeft: '10px'\n                },\n                variant: \"link\",\n                onClick: () => order(),\n                children: \"\\u25BC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Genero\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: loadTable(infectedPeople)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoTable, \"Y7lN/Madvtebnmd7On6S+V+/Sdw=\");\n\n_c = InfoTable;\nexport { InfoTable };\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTable\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/client/src/screens/Home/components/Infected/components/Table.js"],"names":["axios","React","useState","Table","Button","getCurrentDate","InfoTable","data","infectedPeople","setInfectedPeople","sortOrder","setSortOrder","totalInfected","length","stringifyDate","miliseconds","completeDate","Date","year","getFullYear","month","getMonth","day","getDate","date","getInfectedFromApi","get","then","response","loadTable","list","map","infected","backgroundColor","live","infect_date","first_name","last_name","age","country","female","id","order","tableData","sort","a","b","textAlign","marginBottom","width","margin","padding","marginLeft"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { getCurrentDate } from \"../../../../../helpers/functions\";\r\n\r\nconst InfoTable = ({ data }) => {\r\n\r\n    const [infectedPeople, setInfectedPeople] = useState(data);\r\n    const [sortOrder, setSortOrder] = useState('asc');\r\n\r\n    const totalInfected = infectedPeople && infectedPeople.length;\r\n\r\n    const stringifyDate = (miliseconds) => {\r\n        const completeDate = new Date(miliseconds * 1000);\r\n        const year = completeDate.getFullYear();\r\n        const month = completeDate.getMonth() + 1;\r\n        const day = completeDate.getDate();\r\n        const date = `${day} / ${month} / ${year}`;\r\n        return (date)\r\n    }\r\n\r\n    const getInfectedFromApi = () => {\r\n        axios.get('http://localhost:3050/infected').then((response) => {\r\n            setInfectedPeople(response.data);\r\n        })\r\n    };\r\n    getInfectedFromApi();\r\n\r\n    const loadTable = (list) => {\r\n        return (list && list.map((infected) => (\r\n            <tr key={infected.id} style={{ backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}` }}>\r\n                <td>{stringifyDate(`${infected.infect_date}`)}</td>\r\n                <td>{infected.first_name}</td>\r\n                <td>{infected.last_name}</td>\r\n                <td>{infected.age}</td>\r\n                <td>{infected.country}</td>\r\n                <td>{infected.female ? \"Femenino\" : \"Masculino\"}</td>\r\n            </tr>\r\n        )))\r\n    }\r\n\r\n    const order = () => {\r\n        let tableData = [];\r\n        if (sortOrder === 'asc') {\r\n            tableData = infectedPeople.sort(function (a, b) {\r\n                return a.age - b.age;\r\n            });\r\n            setSortOrder('desc')\r\n        }\r\n        if (sortOrder === 'desc') {\r\n            tableData = infectedPeople.sort(function (a, b) {\r\n                return a.age < b.age ? 1 : -1;\r\n            });\r\n            setSortOrder('asc')\r\n        }\r\n        setInfectedPeople([...tableData])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{ backgroundColor: 'rgb(87, 234, 154)', textAlign: 'center', marginBottom: '5vh' }}>Cantidad de infectados al dia {getCurrentDate()}: {totalInfected}</h3>\r\n            <div style={{ width: '80%', margin: 'auto' }}>\r\n                <Table id=\"dataTable\" bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Fecha contagio</th>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido</th>\r\n                            <th>Edad<Button style={{ padding: '0', marginLeft: '10px' }} variant=\"link\" onClick={() => order()}>▼</Button></th>\r\n                            <th>Pais</th>\r\n                            <th>Genero</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {loadTable(infectedPeople)}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { InfoTable }"]},"metadata":{},"sourceType":"module"}