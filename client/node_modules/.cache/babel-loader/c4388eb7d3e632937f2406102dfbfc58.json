{"ast":null,"code":"/*! FileSaver.js v1.3.6\n *\n * A saveAs() FileSaver implementation.\n *\n * By Travis Clarke, https://travismclarke.com\n * By Eli Grey, http://eligrey.com\n *\n * License: MIT (https://github.com/clarketm/FileSaver.js/blob/master/LICENSE.md)\n */\n;\n\n(function (root, factory) {\n  if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    module.exports = root.document ? factory(root, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"FileSaver requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(root);\n  }\n})(window || this, function (window, noGlobal) {\n  \"use strict\"; // IE <10 is explicitly unsupported\n\n  if (typeof window === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n    return;\n  }\n\n  var doc = window.document // only get URL when necessary in case Blob.js hasn't overridden it yet\n  ,\n      get_URL = function () {\n    return window.URL || window.webkitURL || window;\n  },\n      save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\"),\n      can_use_save_link = (\"download\" in save_link),\n      click = function (node) {\n    var event = new MouseEvent(\"click\");\n    node.dispatchEvent(event);\n  },\n      is_safari = /constructor/i.test(window.HTMLElement) || window.safari,\n      is_chrome_ios = /CriOS\\/[\\d]+/.test(navigator.userAgent),\n      throw_outside = function (ex) {\n    (window.setImmediate || window.setTimeout)(function () {\n      throw ex;\n    }, 0);\n  },\n      force_saveable_type = \"application/octet-stream\" // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n  ,\n      arbitrary_revoke_timeout = 1000 * 40 // in ms\n  ,\n      revoke = function (file) {\n    var revoker = function () {\n      if (typeof file === \"string\") {\n        // file is an object URL\n        get_URL().revokeObjectURL(file);\n      } else {\n        // file is a File\n        file.remove();\n      }\n    };\n\n    setTimeout(revoker, arbitrary_revoke_timeout);\n  },\n      dispatch = function (filesaver, event_types, event) {\n    event_types = [].concat(event_types);\n    var i = event_types.length;\n\n    while (i--) {\n      var listener = filesaver[\"on\" + event_types[i]];\n\n      if (typeof listener === \"function\") {\n        try {\n          listener.call(filesaver, event || filesaver);\n        } catch (ex) {\n          throw_outside(ex);\n        }\n      }\n    }\n  },\n      auto_bom = function (blob) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n    if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n      return new Blob([String.fromCharCode(0xFEFF), blob], {\n        type: blob.type\n      });\n    }\n\n    return blob;\n  },\n      FileSaver = function (blob, name, no_auto_bom) {\n    if (!no_auto_bom) {\n      blob = auto_bom(blob);\n    } // First try a.download, then web filesystem, then object URLs\n\n\n    var filesaver = this,\n        type = blob.type,\n        force = type === force_saveable_type,\n        object_url,\n        dispatch_all = function () {\n      dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n    } // on any filesys errors revert to saving with object URLs\n    ,\n        fs_error = function () {\n      if ((is_chrome_ios || force && is_safari) && window.FileReader) {\n        // Safari doesn't allow downloading of blob urls\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n          var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n          var popup = window.open(url, '_blank');\n          if (!popup) window.location.href = url;\n          url = undefined; // release reference before dispatching\n\n          filesaver.readyState = filesaver.DONE;\n          dispatch_all();\n        };\n\n        reader.readAsDataURL(blob);\n        filesaver.readyState = filesaver.INIT;\n        return;\n      } // don't create more object URLs than needed\n\n\n      if (!object_url) {\n        object_url = get_URL().createObjectURL(blob);\n      }\n\n      if (force) {\n        window.location.href = object_url;\n      } else {\n        var opened = window.open(object_url, \"_blank\");\n\n        if (!opened) {\n          // Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n          window.location.href = object_url;\n        }\n      }\n\n      filesaver.readyState = filesaver.DONE;\n      dispatch_all();\n      revoke(object_url);\n    };\n\n    filesaver.readyState = filesaver.INIT;\n\n    if (can_use_save_link) {\n      object_url = get_URL().createObjectURL(blob);\n      setTimeout(function () {\n        save_link.href = object_url;\n        save_link.download = name;\n        click(save_link);\n        dispatch_all();\n        revoke(object_url);\n        filesaver.readyState = filesaver.DONE;\n      });\n      return;\n    }\n\n    fs_error();\n  },\n      FS_proto = FileSaver.prototype,\n      saveAs = function (blob, name, no_auto_bom) {\n    return new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n  }; // IE 10+ (native saveAs)\n\n\n  if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n    saveAs = function (blob, name, no_auto_bom) {\n      name = name || blob.name || \"download\";\n\n      if (!no_auto_bom) {\n        blob = auto_bom(blob);\n      }\n\n      return navigator.msSaveOrOpenBlob(blob, name);\n    };\n  }\n\n  FS_proto.abort = function () {};\n\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n\n  if (typeof define === \"function\" && define.amd) {\n    define(\"file-saverjs\", [], function () {\n      return saveAs;\n    });\n  }\n\n  if (typeof noGlobal === 'undefined') {\n    window.saveAs = saveAs;\n  }\n\n  return saveAs;\n});","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/node_modules/file-saverjs/FileSaver.js"],"names":["root","factory","exports","nodeName","module","document","w","Error","window","noGlobal","navigator","test","userAgent","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","concat","i","length","listener","call","auto_bom","blob","type","Blob","String","fromCharCode","FileSaver","name","no_auto_bom","force","object_url","dispatch_all","split","fs_error","FileReader","reader","onloadend","url","result","replace","popup","open","location","href","undefined","readyState","DONE","readAsDataURL","INIT","createObjectURL","opened","download","FS_proto","prototype","saveAs","msSaveOrOpenBlob","abort","WRITING","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","define","amd"],"mappings":"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","sourcesContent":["/*! FileSaver.js v1.3.6\n *\n * A saveAs() FileSaver implementation.\n *\n * By Travis Clarke, https://travismclarke.com\n * By Eli Grey, http://eligrey.com\n *\n * License: MIT (https://github.com/clarketm/FileSaver.js/blob/master/LICENSE.md)\n */\n\n;(function (root, factory) {\n    if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        module.exports = root.document ? factory(root, true) : function (w) {\n            if (!w.document) {\n                throw new Error(\"FileSaver requires a window with a document\");\n            }\n            return factory(w);\n        };\n    } else {\n        factory(root);\n    }\n}(window || this, function (window, noGlobal) {\n        \"use strict\";\n        // IE <10 is explicitly unsupported\n        if (typeof window === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n            return;\n        }\n        var\n            doc = window.document\n            // only get URL when necessary in case Blob.js hasn't overridden it yet\n            , get_URL = function () {\n                return window.URL || window.webkitURL || window;\n            }\n            , save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n            , can_use_save_link = \"download\" in save_link\n            , click = function (node) {\n                var event = new MouseEvent(\"click\");\n                node.dispatchEvent(event);\n            }\n            , is_safari = /constructor/i.test(window.HTMLElement) || window.safari\n            , is_chrome_ios = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n            , throw_outside = function (ex) {\n                (window.setImmediate || window.setTimeout)(function () {\n                    throw ex;\n                }, 0);\n            }\n            , force_saveable_type = \"application/octet-stream\"\n            // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n            , arbitrary_revoke_timeout = 1000 * 40 // in ms\n            , revoke = function (file) {\n                var revoker = function () {\n                    if (typeof file === \"string\") { // file is an object URL\n                        get_URL().revokeObjectURL(file);\n                    } else { // file is a File\n                        file.remove();\n                    }\n                };\n                setTimeout(revoker, arbitrary_revoke_timeout);\n            }\n            , dispatch = function (filesaver, event_types, event) {\n                event_types = [].concat(event_types);\n                var i = event_types.length;\n                while (i--) {\n                    var listener = filesaver[\"on\" + event_types[i]];\n                    if (typeof listener === \"function\") {\n                        try {\n                            listener.call(filesaver, event || filesaver);\n                        } catch (ex) {\n                            throw_outside(ex);\n                        }\n                    }\n                }\n            }\n            , auto_bom = function (blob) {\n                // prepend BOM for UTF-8 XML and text/* types (including HTML)\n                // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n                if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n                    return new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n                }\n                return blob;\n            }\n            , FileSaver = function (blob, name, no_auto_bom) {\n                if (!no_auto_bom) {\n                    blob = auto_bom(blob);\n                }\n                // First try a.download, then web filesystem, then object URLs\n                var\n                    filesaver = this\n                    , type = blob.type\n                    , force = type === force_saveable_type\n                    , object_url\n                    , dispatch_all = function () {\n                        dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n                    }\n                    // on any filesys errors revert to saving with object URLs\n                    , fs_error = function () {\n                        if ((is_chrome_ios || (force && is_safari)) && window.FileReader) {\n                            // Safari doesn't allow downloading of blob urls\n                            var reader = new FileReader();\n                            reader.onloadend = function () {\n                                var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n                                var popup = window.open(url, '_blank');\n                                if (!popup) window.location.href = url;\n                                url = undefined; // release reference before dispatching\n                                filesaver.readyState = filesaver.DONE;\n                                dispatch_all();\n                            };\n                            reader.readAsDataURL(blob);\n                            filesaver.readyState = filesaver.INIT;\n                            return;\n                        }\n                        // don't create more object URLs than needed\n                        if (!object_url) {\n                            object_url = get_URL().createObjectURL(blob);\n                        }\n                        if (force) {\n                            window.location.href = object_url;\n                        } else {\n                            var opened = window.open(object_url, \"_blank\");\n                            if (!opened) {\n                                // Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n                                window.location.href = object_url;\n                            }\n                        }\n                        filesaver.readyState = filesaver.DONE;\n                        dispatch_all();\n                        revoke(object_url);\n                    }\n                    ;\n                filesaver.readyState = filesaver.INIT;\n\n                if (can_use_save_link) {\n                    object_url = get_URL().createObjectURL(blob);\n                    setTimeout(function () {\n                        save_link.href = object_url;\n                        save_link.download = name;\n                        click(save_link);\n                        dispatch_all();\n                        revoke(object_url);\n                        filesaver.readyState = filesaver.DONE;\n                    });\n                    return;\n                }\n\n                fs_error();\n            }\n            , FS_proto = FileSaver.prototype\n            , saveAs = function (blob, name, no_auto_bom) {\n                return new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n            }\n            ;\n        // IE 10+ (native saveAs)\n        if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n            saveAs = function (blob, name, no_auto_bom) {\n                name = name || blob.name || \"download\";\n\n                if (!no_auto_bom) {\n                    blob = auto_bom(blob);\n                }\n                return navigator.msSaveOrOpenBlob(blob, name);\n            };\n        }\n\n        FS_proto.abort = function () {\n        };\n        FS_proto.readyState = FS_proto.INIT = 0;\n        FS_proto.WRITING = 1;\n        FS_proto.DONE = 2;\n\n        FS_proto.error =\n            FS_proto.onwritestart =\n                FS_proto.onprogress =\n                    FS_proto.onwrite =\n                        FS_proto.onabort =\n                            FS_proto.onerror =\n                                FS_proto.onwriteend =\n                                    null;\n\n        if (typeof define === \"function\" && define.amd) {\n            define(\"file-saverjs\", [], function () {\n                return saveAs;\n            });\n        }\n\n        if (typeof noGlobal === 'undefined') {\n            window.saveAs = saveAs;\n        }\n        return saveAs;\n    }\n));\n"]},"metadata":{},"sourceType":"script"}