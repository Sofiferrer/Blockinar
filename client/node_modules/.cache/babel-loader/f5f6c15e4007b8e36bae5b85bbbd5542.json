{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Countries\\\\components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { countries } from \"../../../../../api/countries\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const [countriesList, setCountriesList] = useState();\n  useEffect(() => {\n    countries.getCountries().then(response => {\n      setCountriesList(response);\n    });\n  }, []);\n  console.log(countriesList);\n  const countriesNames = [];\n\n  const getCountriesNames = countryName => {\n    countriesNames.push(countryName);\n    return countriesNames;\n  };\n\n  countriesList && countriesList.map(pais => getCountriesNames(pais.name));\n  console.log(countriesNames);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: 'Progresion contagios',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 50,\n        width: 100,\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"TTBjbO8d3vn9Y3JU9rTiiwkfne0=\");\n\n_c = Chart;\nexport { Chart };\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Countries/components/Chart.js"],"names":["React","useEffect","useState","countries","Pie","Chart","countriesList","setCountriesList","getCountries","then","response","console","log","countriesNames","getCountriesNames","countryName","push","map","pais","name","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,EAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,SAAS,CAACK,YAAV,GAAyBC,IAAzB,CAA+BC,QAAD,IAAc;AACxCH,MAAAA,gBAAgB,CAACG,QAAD,CAAhB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AAEA,QAAMO,cAAc,GAAG,EAAvB;;AACA,QAAMC,iBAAiB,GAAIC,WAAD,IAAiB;AAEvCF,IAAAA,cAAc,CAACG,IAAf,CAAoBD,WAApB;AAEA,WAAQF,cAAR;AACH,GALD;;AAOAP,EAAAA,aAAa,IAAIA,aAAa,CAACW,GAAd,CAAmBC,IAAD,IAAUJ,iBAAiB,CAACI,IAAI,CAACC,IAAN,CAA7C,CAAjB;AAEAR,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,IAAI,EAAE;AACFO,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADN;AAEFC,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,sBADX;AAEIC,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFV;AAGIC,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WADM;AAFR,SADV;AA2BI,QAAA,MAAM,EAAE,EA3BZ;AA4BI,QAAA,KAAK,EAAE,GA5BX;AA6BI,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAE,KADhB;AAELC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,CACH;AACIC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,WAAW,EAAE;AADV;AADX,aADG;AADH;AAFH;AA7Bb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAzED;;GAAM1B,K;;KAAAA,K;AA2EN,SAASA,KAAT","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { countries } from \"../../../../../api/countries\"\r\nimport { Pie } from \"react-chartjs-2\"\r\n\r\nconst Chart = () => {\r\n\r\n    const [countriesList, setCountriesList] = useState();\r\n\r\n    useEffect(() => {\r\n        countries.getCountries().then((response) => {\r\n            setCountriesList(response);\r\n        })\r\n    }, []);\r\n\r\n    console.log(countriesList)\r\n\r\n    const countriesNames = [];\r\n    const getCountriesNames = (countryName) => {\r\n\r\n        countriesNames.push(countryName)\r\n\r\n        return (countriesNames)\r\n    }\r\n\r\n    countriesList && countriesList.map((pais) => getCountriesNames(pais.name))\r\n\r\n    console.log(countriesNames)\r\n\r\n    return (\r\n        <div>\r\n            <h4>Chart</h4>\r\n            <div>\r\n                <Pie\r\n                    data={{\r\n                        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets: [\r\n                            {\r\n                                label: 'Progresion contagios',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n                            },\r\n                        ]\r\n                    }}\r\n                    height={50}\r\n                    width={100}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport { Chart }"]},"metadata":{},"sourceType":"module"}