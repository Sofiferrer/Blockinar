{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Chart, InfoTable, ModalForm } from \"./components\";\nimport { infected } from \"../../../../api/infected\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Infected = () => {\n  _s();\n\n  const [infectedPeople, setInfectedPeople] = useState();\n  useEffect(() => {\n    infected.getInfected().then(response => {\n      setInfectedPeople(response);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [infectedPeople && /*#__PURE__*/_jsxDEV(InfoTable, {\n      data: infectedPeople\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ModalForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), infectedPeople && /*#__PURE__*/_jsxDEV(Chart, {\n      data: infectedPeople\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Infected, \"k9kuneOE3F05VNdrfQxI7/hE4ic=\");\n\n_c = Infected;\nexport { Infected };\n\nvar _c;\n\n$RefreshReg$(_c, \"Infected\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Infected/index.js"],"names":["React","useState","useEffect","Chart","InfoTable","ModalForm","infected","Infected","infectedPeople","setInfectedPeople","getInfected","then","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,cAA5C;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,EAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ,CAACI,WAAT,GAAuBC,IAAvB,CAA6BC,QAAD,IAAc;AACtCH,MAAAA,iBAAiB,CAACG,QAAD,CAAjB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA,eACKJ,cAAc,iBACX,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFR,eAII,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKKA,cAAc,iBACX,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArBD;;GAAMD,Q;;KAAAA,Q;AAuBN,SAASA,QAAT","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart, InfoTable, ModalForm } from \"./components\"\r\nimport { infected } from \"../../../../api/infected\";\r\n\r\nconst Infected = () => {\r\n\r\n    const [infectedPeople, setInfectedPeople] = useState();\r\n\r\n    useEffect(() => {\r\n        infected.getInfected().then((response) => {\r\n            setInfectedPeople(response);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {infectedPeople && (\r\n                <InfoTable data={infectedPeople} />\r\n            )}\r\n            <ModalForm />\r\n            {infectedPeople && (\r\n                <Chart data={infectedPeople} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Infected }"]},"metadata":{},"sourceType":"module"}