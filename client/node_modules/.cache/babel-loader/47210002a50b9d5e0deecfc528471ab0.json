{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'react-bootstrap';\nimport { infected } from \"../../../../api/infected\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Infected = () => {\n  _s();\n\n  const [infectedPeople, setInfectedPeople] = useState();\n  useEffect(() => {\n    infected.getInfected().then(response => {\n      setInfectedPeople(response);\n    });\n  }, []);\n  console.log(infectedPeople);\n\n  const ordenar = () => {\n    setInfectedPeople(infectedPeople && infectedPeople.sort(function (prev, next) {\n      return prev.age - next.age;\n    }));\n  };\n\n  useEffect(() => {\n    setInfectedPeople(infectedPeople && infectedPeople.sort(function (prev, next) {\n      return prev.age - next.age;\n    }));\n  }, [ordenar]);\n  const dateObject = new Date(1622730652 * 1000);\n  const anio = dateObject.getFullYear();\n  const mes = dateObject.getMonth();\n  const dia = dateObject.getDate(); // console.log(dateObject)\n  // console.log(dia, mes, anio)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Infectados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha contagio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Apellido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Edad\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => ordenar(),\n              children: \"O\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Genero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: infectedPeople && infectedPeople.map(infected => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: `${infected.live ? \"white\" : \"red\"}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"FECHA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: infected.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: infected.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: infected.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: infected.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: infected.female ? \"Femenino\" : \"Masculino\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, infected.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Infected, \"nHQU1Mfy+EL32IQhU7gzpzLJCWI=\");\n\n_c = Infected;\nexport { Infected };\n\nvar _c;\n\n$RefreshReg$(_c, \"Infected\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Infected/index.js"],"names":["React","useEffect","useState","Table","infected","Infected","infectedPeople","setInfectedPeople","getInfected","then","response","console","log","ordenar","sort","prev","next","age","dateObject","Date","anio","getFullYear","mes","getMonth","dia","getDate","map","backgroundColor","live","first_name","last_name","country","female","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Table } from 'react-bootstrap'\r\nimport { infected } from \"../../../../api/infected\";\r\nimport \"./style.css\";\r\n\r\nconst Infected = () => {\r\n\r\n    const [infectedPeople, setInfectedPeople] = useState();\r\n\r\n    useEffect(() => {\r\n        infected.getInfected().then((response) => {\r\n            setInfectedPeople(response);\r\n        })\r\n    }, []);\r\n\r\n    console.log(infectedPeople)\r\n\r\n    const ordenar = () => {\r\n        setInfectedPeople(\r\n            infectedPeople && infectedPeople.sort(function (prev, next) {\r\n                return prev.age - next.age\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setInfectedPeople(\r\n            infectedPeople && infectedPeople.sort(function (prev, next) {\r\n                return prev.age - next.age\r\n            })\r\n        )\r\n    }, [ordenar]);\r\n\r\n    const dateObject = new Date(1622730652 * 1000)\r\n    const anio = dateObject.getFullYear();\r\n    const mes = dateObject.getMonth();\r\n    const dia = dateObject.getDate();\r\n\r\n    // console.log(dateObject)\r\n    // console.log(dia, mes, anio)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Infectados</h1>\r\n            <Table bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Fecha contagio</th>\r\n                        <th>Nombre</th>\r\n                        <th>Apellido</th>\r\n                        <th>Edad<button onClick={() => ordenar()}>O</button></th>\r\n                        <th>Pais</th>\r\n                        <th>Genero</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {infectedPeople && infectedPeople.map((infected) => (\r\n                        <tr key={infected.id} style={{ backgroundColor: `${infected.live ? \"white\" : \"red\"}` }}>\r\n                            {/* <td>{new Date(`${infected.infect_date * 1000}`).getFullYear()}</td> */}\r\n                            <td>FECHA</td>\r\n                            <td>{infected.first_name}</td>\r\n                            <td>{infected.last_name}</td>\r\n                            <td>{infected.age}</td>\r\n                            <td>{infected.country}</td>\r\n                            <td>{infected.female ? \"Femenino\" : \"Masculino\"}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport { Infected }"]},"metadata":{},"sourceType":"module"}