{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Countries\\\\components\\\\Chart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { countries } from \"../../../../../api/countries\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data\n}) => {\n  const countriesNames = [];\n\n  const getCountriesNames = countryName => {\n    countriesNames.push(countryName);\n    return countriesNames;\n  };\n\n  const countriesInfections = [];\n\n  const getCountriesInfections = countryInfections => {\n    countriesInfections.push(countryInfections);\n    return countriesInfections;\n  };\n\n  countriesList && countriesList.map(country => getCountriesNames(country.name));\n  countriesList && countriesList.map(country => getCountriesInfections(country.infected));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: countriesNames,\n          datasets: [{\n            label: 'Contagios por pais',\n            data: countriesInfections,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(0, 255, 255, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(0, 0, 255, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(138, 43, 226, 0.2)', 'rgba(255, 127, 80, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(100, 149, 237, 0.2)', 'rgba(220, 20, 60, 0.2)', 'rgba(255, 248, 220, 0.2)', 'rgba(184, 134, 11, 0.2)', 'rgba(0, 100, 0, 0.2)', 'rgba(139, 0, 139, 0.2)', 'rgba(255, 140, 0, 0.2)', 'rgba(139, 0, 0, 0.2)', 'rgba(143, 188, 143, 0.2)', 'rgba(255, 215, 0, 0.2)', 'rgba(173, 255, 47, 0.2)', 'rgba(255, 105, 180, 0.2)', 'rgba(75, 0, 130, 0.2)', 'rgba(32, 178, 170, 0.2)', 'rgba(255, 0, 255, 0.2)', 'rgba(102, 205, 170, 0.2)', 'rgba(255, 228, 181, 0.2)', 'rgba(255, 165, 0, 0.2)', 'rgba(218, 112, 214, 0.2)', 'rgba(205, 133, 63, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(0, 255, 255, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(0, 0, 255, 1)', 'rgba(255, 206, 86, 1)', 'rgba(138, 43, 226, 1)', 'rgba(255, 127, 80, 1)', 'rgba(255, 159, 64, 1)', 'rgba(100, 149, 237, 1)', 'rgba(220, 20, 60, 1)', 'rgba(255, 248, 220, 1)', 'rgba(184, 134, 11, 1)', 'rgba(0, 100, 0, 1)', 'rgba(139, 0, 139, 1)', 'rgba(255, 140, 0, 1)', 'rgba(139, 0, 0, 1)', 'rgba(143, 188, 143, 1)', 'rgba(255, 215, 0, 1)', 'rgba(173, 255, 47, 1)', 'rgba(255, 105, 180, 1)', 'rgba(75, 0, 130, 1)', 'rgba(32, 178, 170, 1)', 'rgba(255, 0, 255, 1)', 'rgba(102, 205, 170, 1)', 'rgba(255, 228, 181, 1)', 'rgba(255, 165, 0, 1)', 'rgba(218, 112, 214, 1)', 'rgba(205, 133, 63, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 50,\n        width: 100,\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chart;\nexport { Chart };\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Countries/components/Chart.js"],"names":["React","useEffect","useState","countries","Pie","Chart","data","countriesNames","getCountriesNames","countryName","push","countriesInfections","getCountriesInfections","countryInfections","countriesList","map","country","name","infected","width","textAlign","height","margin","labels","datasets","label","backgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { countries } from \"../../../../../api/countries\"\r\nimport { Pie } from \"react-chartjs-2\"\r\n\r\nconst Chart = ({ data }) => {\r\n\r\n\r\n\r\n    const countriesNames = [];\r\n    const getCountriesNames = (countryName) => {\r\n        countriesNames.push(countryName)\r\n        return (countriesNames)\r\n    }\r\n\r\n    const countriesInfections = [];\r\n    const getCountriesInfections = (countryInfections) => {\r\n        countriesInfections.push(countryInfections)\r\n        return (countriesInfections)\r\n    }\r\n\r\n    countriesList && countriesList.map((country) => getCountriesNames(country.name))\r\n    countriesList && countriesList.map((country) => getCountriesInfections(country.infected))\r\n\r\n    return (\r\n        <div style={{ width: '80%' }}>\r\n            <h4 style={{ textAlign: 'center' }}>Chart</h4>\r\n            <div style={{ height: '100vh', width: '100%', margin: 'auto' }}>\r\n                <Pie\r\n                    data={{\r\n                        labels: countriesNames,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Contagios por pais',\r\n                                data: countriesInfections,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(0, 255, 255, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(0, 0, 255, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(138, 43, 226, 0.2)',\r\n                                    'rgba(255, 127, 80, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)',\r\n                                    'rgba(100, 149, 237, 0.2)',\r\n                                    'rgba(220, 20, 60, 0.2)',\r\n                                    'rgba(255, 248, 220, 0.2)',\r\n                                    'rgba(184, 134, 11, 0.2)',\r\n                                    'rgba(0, 100, 0, 0.2)',\r\n                                    'rgba(139, 0, 139, 0.2)',\r\n                                    'rgba(255, 140, 0, 0.2)',\r\n                                    'rgba(139, 0, 0, 0.2)',\r\n                                    'rgba(143, 188, 143, 0.2)',\r\n                                    'rgba(255, 215, 0, 0.2)',\r\n                                    'rgba(173, 255, 47, 0.2)',\r\n                                    'rgba(255, 105, 180, 0.2)',\r\n                                    'rgba(75, 0, 130, 0.2)',\r\n                                    'rgba(32, 178, 170, 0.2)',\r\n                                    'rgba(255, 0, 255, 0.2)',\r\n                                    'rgba(102, 205, 170, 0.2)',\r\n                                    'rgba(255, 228, 181, 0.2)',\r\n                                    'rgba(255, 165, 0, 0.2)',\r\n                                    'rgba(218, 112, 214, 0.2)',\r\n                                    'rgba(205, 133, 63, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(0, 255, 255, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(0, 0, 255, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(138, 43, 226, 1)',\r\n                                    'rgba(255, 127, 80, 1)',\r\n                                    'rgba(255, 159, 64, 1)',\r\n                                    'rgba(100, 149, 237, 1)',\r\n                                    'rgba(220, 20, 60, 1)',\r\n                                    'rgba(255, 248, 220, 1)',\r\n                                    'rgba(184, 134, 11, 1)',\r\n                                    'rgba(0, 100, 0, 1)',\r\n                                    'rgba(139, 0, 139, 1)',\r\n                                    'rgba(255, 140, 0, 1)',\r\n                                    'rgba(139, 0, 0, 1)',\r\n                                    'rgba(143, 188, 143, 1)',\r\n                                    'rgba(255, 215, 0, 1)',\r\n                                    'rgba(173, 255, 47, 1)',\r\n                                    'rgba(255, 105, 180, 1)',\r\n                                    'rgba(75, 0, 130, 1)',\r\n                                    'rgba(32, 178, 170, 1)',\r\n                                    'rgba(255, 0, 255, 1)',\r\n                                    'rgba(102, 205, 170, 1)',\r\n                                    'rgba(255, 228, 181, 1)',\r\n                                    'rgba(255, 165, 0, 1)',\r\n                                    'rgba(218, 112, 214, 1)',\r\n                                    'rgba(205, 133, 63, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n                            },\r\n                        ]\r\n                    }}\r\n                    height={50}\r\n                    width={100}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport { Chart }"]},"metadata":{},"sourceType":"module"}