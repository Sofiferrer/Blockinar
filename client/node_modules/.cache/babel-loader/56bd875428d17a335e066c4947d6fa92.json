{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\components\\\\BasicTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicTable = ({\n  datos,\n  columnas\n}) => {\n  _s();\n\n  const newDate = new Date();\n  const year = newDate.getFullYear();\n  const month = newDate.getMonth() + 1;\n  const day = newDate.getDate();\n  const today = `${day} / ${month} / ${year}`;\n  const columns = useMemo(() => columnas, []);\n  const data = useMemo(() => datos, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  console.log(data[1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        backgroundColor: 'rgb(87, 234, 154)',\n        textAlign: 'center',\n        marginBottom: '5vh'\n      },\n      children: [\"Cantidad de infectados al dia \", today, \": \", data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 52\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\nexport { BasicTable };\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Infected/components/BasicTable.js"],"names":["React","useMemo","useTable","BasicTable","datos","columnas","newDate","Date","year","getFullYear","month","getMonth","day","getDate","today","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","console","log","backgroundColor","textAlign","marginBottom","length","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAExC,QAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAMC,IAAI,GAAGF,OAAO,CAACG,WAAR,EAAb;AACA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAnC;AACA,QAAMC,GAAG,GAAGN,OAAO,CAACO,OAAR,EAAZ;AACA,QAAMC,KAAK,GAAI,GAAEF,GAAI,MAAKF,KAAM,MAAKF,IAAK,EAA1C;AAEA,QAAMO,OAAO,GAAGd,OAAO,CAAC,MAAMI,QAAP,EAAiB,EAAjB,CAAvB;AACA,QAAMW,IAAI,GAAGf,OAAO,CAAC,MAAMG,KAAP,EAAc,EAAd,CAApB;AAEA,QAAMa,aAAa,GAAGf,QAAQ,CAAC;AAC3Ba,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,CAA9B;AAKA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MAAuEL,aAA7E;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAAC,CAAD,CAAhB;AAGA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAAES,QAAAA,eAAe,EAAE,mBAAnB;AAAwCC,QAAAA,SAAS,EAAE,QAAnD;AAA6DC,QAAAA,YAAY,EAAE;AAA3E,OAAX;AAAA,mDAA8Hb,KAA9H,QAAuIE,IAAI,CAACY,MAA5I;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,sBAAWV,aAAa,EAAxB;AAAA,8BACI;AAAA,kBACKE,YAAY,CAACS,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,sBAAWhB,iBAAiB,EAA5B;AAAA,kBAEQE,IAAI,CAACQ,GAAL,CAAUO,GAAD,IAAS;AACdd,UAAAA,UAAU,CAACc,GAAD,CAAV;AACA,8BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBAEQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACpB,kCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,SAXD;AAFR;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAvDD;;GAAMhC,U;UAWoBD,Q;;;KAXpBC,U;AAyDN,SAASA,UAAT","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useTable } from 'react-table'\r\n\r\n\r\n\r\nconst BasicTable = ({ datos, columnas }) => {\r\n\r\n    const newDate = new Date();\r\n    const year = newDate.getFullYear();\r\n    const month = newDate.getMonth() + 1;\r\n    const day = newDate.getDate();\r\n    const today = `${day} / ${month} / ${year}`;\r\n\r\n    const columns = useMemo(() => columnas, [])\r\n    const data = useMemo(() => datos, [])\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n    })\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance\r\n\r\n    console.log(data[1])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{ backgroundColor: 'rgb(87, 234, 154)', textAlign: 'center', marginBottom: '5vh' }}>Cantidad de infectados al dia {today}: {data.length}</h3>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map(column => (\r\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        rows.map((row) => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {\r\n                                        row.cells.map((cell) => {\r\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { BasicTable }"]},"metadata":{},"sourceType":"module"}