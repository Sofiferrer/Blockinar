{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Infected\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'react-bootstrap';\nimport { infected } from \"../../../../../api/infected\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoTable = () => {\n  _s();\n\n  const [infectedPeople, setInfectedPeople] = useState();\n  useEffect(() => {\n    infected.getInfected().then(response => {\n      setInfectedPeople(response);\n    });\n  }, []);\n  console.log(infectedPeople);\n\n  const ordenar = () => {\n    infectedPeople.sort(function (prev, next) {\n      return prev.age - next.age;\n    });\n    console.log(infectedPeople);\n  }; // const dateObject = new Date(1622730652 * 1000)\n  // const anio = dateObject.getFullYear();\n  // const mes = dateObject.getMonth();\n  // const dia = dateObject.getDate();\n  // console.log(dateObject)\n  // console.log(dia, mes, anio)\n\n\n  const getDate = num => {\n    const completeDate = new Date(num * 1000);\n    const year = completeDate.getFullYear();\n    const month = completeDate.getMonth();\n    const day = completeDate.getDate();\n    return day, month, year;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Infectados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha contagio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Apellido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"Edad\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => ordenar(),\n                children: \"O\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Genero\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: infectedPeople && infectedPeople.map(infected => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: getDate(`${infected.infect_date}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: infected.first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: infected.last_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: infected.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: infected.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: infected.female ? \"Femenino\" : \"Masculino\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, infected.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoTable, \"k9kuneOE3F05VNdrfQxI7/hE4ic=\");\n\n_c = InfoTable;\nexport { InfoTable };\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTable\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Infected/components/Table.js"],"names":["React","useEffect","useState","Table","infected","InfoTable","infectedPeople","setInfectedPeople","getInfected","then","response","console","log","ordenar","sort","prev","next","age","getDate","num","completeDate","Date","year","getFullYear","month","getMonth","day","width","margin","map","backgroundColor","live","infect_date","first_name","last_name","country","female","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Table } from 'react-bootstrap'\r\nimport { infected } from \"../../../../../api/infected\";\r\n\r\nconst InfoTable = () => {\r\n\r\n    const [infectedPeople, setInfectedPeople] = useState();\r\n\r\n    useEffect(() => {\r\n        infected.getInfected().then((response) => {\r\n            setInfectedPeople(response);\r\n        })\r\n    }, []);\r\n\r\n    console.log(infectedPeople)\r\n\r\n    const ordenar = () => {\r\n        infectedPeople.sort(function (prev, next) {\r\n            return prev.age - next.age\r\n        })\r\n        console.log(infectedPeople)\r\n    }\r\n\r\n    // const dateObject = new Date(1622730652 * 1000)\r\n    // const anio = dateObject.getFullYear();\r\n    // const mes = dateObject.getMonth();\r\n    // const dia = dateObject.getDate();\r\n\r\n    // console.log(dateObject)\r\n    // console.log(dia, mes, anio)\r\n\r\n    const getDate = (num) => {\r\n        const completeDate = new Date(num * 1000);\r\n        const year = completeDate.getFullYear();\r\n        const month = completeDate.getMonth();\r\n        const day = completeDate.getDate();\r\n\r\n        return (day, month, year)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Infectados</h3>\r\n            <div style={{ width: '80%', margin: 'auto' }}>\r\n                <Table bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Fecha contagio</th>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido</th>\r\n                            <th>Edad<button onClick={() => ordenar()}>O</button></th>\r\n                            <th>Pais</th>\r\n                            <th>Genero</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {infectedPeople && infectedPeople.map((infected) => (\r\n                            <tr key={infected.id} style={{ backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}` }}>\r\n                                <td>{getDate(`${infected.infect_date}`)}</td>\r\n                                {/* <td>FECHA</td> */}\r\n                                <td>{infected.first_name}</td>\r\n                                <td>{infected.last_name}</td>\r\n                                <td>{infected.age}</td>\r\n                                <td>{infected.country}</td>\r\n                                <td>{infected.female ? \"Femenino\" : \"Masculino\"}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { InfoTable }"]},"metadata":{},"sourceType":"module"}