{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\blockinar\\\\src\\\\screens\\\\Home\\\\components\\\\Countries\\\\components\\\\Chart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { countries } from \"../../../../../api/countries\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  // const [countriesList, setCountriesList] = useState();\n  // useEffect(() => {\n  //     countries.getCountries().then((response) => {\n  //         setCountriesList(response);\n  //     })\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chart;\nexport { Chart };\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/blockinar/src/screens/Home/components/Countries/components/Chart.js"],"names":["React","useEffect","useState","countries","Pie","Chart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB;AAEA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CA3DD;;KAAMA,K;AA6DN,SAASA,KAAT","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { countries } from \"../../../../../api/countries\"\r\nimport { Pie } from \"react-chartjs-2\"\r\n\r\nconst Chart = () => {\r\n\r\n    // const [countriesList, setCountriesList] = useState();\r\n\r\n    // useEffect(() => {\r\n    //     countries.getCountries().then((response) => {\r\n    //         setCountriesList(response);\r\n    //     })\r\n    // }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Chart</h4>\r\n            <div>\r\n                {/* <Pie\r\n                    data={{\r\n                        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                        datasets: [\r\n                            {\r\n                                label: 'Progresion contagios',\r\n                                data: [12, 19, 3, 5, 2, 3],\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n                            },\r\n                        ]\r\n                    }}\r\n                    height={50}\r\n                    width={100}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }}\r\n                /> */}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport { Chart }"]},"metadata":{},"sourceType":"module"}