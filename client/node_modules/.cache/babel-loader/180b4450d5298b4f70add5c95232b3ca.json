{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi\\\\Desktop\\\\Blockinar\\\\proyect\\\\client\\\\src\\\\helpers\\\\functions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCurrentDate = () => {\n  const newDate = new Date();\n  const year = newDate.getFullYear();\n  const month = newDate.getMonth() + 1;\n  const day = newDate.getDate();\n  return `${year}-${month}-${day}`;\n};\n\nconst stringifyDate = date => {\n  const completeDate = date;\n  const year = completeDate.getFullYear();\n  const month = completeDate.getMonth() + 1;\n  const day = completeDate.getDate();\n  const stringDate = `${day}-${month}-${year}`;\n  return stringDate;\n};\n\nconst getDates = miliseconds => {\n  const dates = [];\n  const completeDate = new Date(miliseconds * 1000);\n  const year = completeDate.getFullYear();\n  const month = completeDate.getMonth() + 1;\n  const day = completeDate.getDate();\n  const date = `${day}-${month}-${year}`;\n\n  if (!dates.includes(date)) {\n    dates.push(date);\n  }\n\n  return dates;\n};\n\nconst loadTable = list => {\n  return list && list.map(infected => /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: {\n      backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: infected.infect_date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: infected.first_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: infected.last_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: infected.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: infected.country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: infected.gendre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, infected.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this));\n};\n\nexport { getCurrentDate, getDates, stringifyDate, loadTable };","map":{"version":3,"sources":["C:/Users/Sofi/Desktop/Blockinar/proyect/client/src/helpers/functions.js"],"names":["getCurrentDate","newDate","Date","year","getFullYear","month","getMonth","day","getDate","stringifyDate","date","completeDate","stringDate","getDates","miliseconds","dates","includes","push","loadTable","list","map","infected","backgroundColor","live","infect_date","first_name","last_name","age","country","gendre","id"],"mappings":";;;AAAA,MAAMA,cAAc,GAAG,MAAM;AACzB,QAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAMC,IAAI,GAAGF,OAAO,CAACG,WAAR,EAAb;AACA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAnC;AACA,QAAMC,GAAG,GAAGN,OAAO,CAACO,OAAR,EAAZ;AACA,SAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGE,GAAI,EAA/B;AACH,CAND;;AAQA,MAAME,aAAa,GAAIC,IAAD,IAAU;AAC5B,QAAMC,YAAY,GAAGD,IAArB;AACA,QAAMP,IAAI,GAAGQ,YAAY,CAACP,WAAb,EAAb;AACA,QAAMC,KAAK,GAAGM,YAAY,CAACL,QAAb,KAA0B,CAAxC;AACA,QAAMC,GAAG,GAAGI,YAAY,CAACH,OAAb,EAAZ;AACA,QAAMI,UAAU,GAAI,GAAEL,GAAI,IAAGF,KAAM,IAAGF,IAAK,EAA3C;AACA,SAAQS,UAAR;AACH,CAPD;;AASA,MAAMC,QAAQ,GAAIC,WAAD,IAAiB;AAC9B,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMJ,YAAY,GAAG,IAAIT,IAAJ,CAASY,WAAW,GAAG,IAAvB,CAArB;AACA,QAAMX,IAAI,GAAGQ,YAAY,CAACP,WAAb,EAAb;AACA,QAAMC,KAAK,GAAGM,YAAY,CAACL,QAAb,KAA0B,CAAxC;AACA,QAAMC,GAAG,GAAGI,YAAY,CAACH,OAAb,EAAZ;AACA,QAAME,IAAI,GAAI,GAAEH,GAAI,IAAGF,KAAM,IAAGF,IAAK,EAArC;;AACA,MAAI,CAACY,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAL,EAA2B;AACvBK,IAAAA,KAAK,CAACE,IAAN,CAAWP,IAAX;AACH;;AACD,SAAQK,KAAR;AACH,CAXD;;AAaA,MAAMG,SAAS,GAAIC,IAAD,IAAU;AACxB,SAAQA,IAAI,IAAIA,IAAI,CAACC,GAAL,CAAUC,QAAD,iBACrB;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAG,GAAED,QAAQ,CAACE,IAAT,GAAgB,OAAhB,GAA0B,yBAA0B;AAA1E,KAA7B;AAAA,4BACI;AAAA,gBAAKF,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKH,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKJ,QAAQ,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAKL,QAAQ,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBAAKN,QAAQ,CAACO;AAAd;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,gBAAKP,QAAQ,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,KAASR,QAAQ,CAACS,EAAlB;AAAA;AAAA;AAAA;AAAA,UADY,CAAhB;AAUH,CAXD;;AAcA,SAAS9B,cAAT,EAAyBa,QAAzB,EAAmCJ,aAAnC,EAAkDS,SAAlD","sourcesContent":["const getCurrentDate = () => {\r\n    const newDate = new Date();\r\n    const year = newDate.getFullYear();\r\n    const month = newDate.getMonth() + 1;\r\n    const day = newDate.getDate();\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst stringifyDate = (date) => {\r\n    const completeDate = date;\r\n    const year = completeDate.getFullYear();\r\n    const month = completeDate.getMonth() + 1;\r\n    const day = completeDate.getDate();\r\n    const stringDate = `${day}-${month}-${year}`;\r\n    return (stringDate)\r\n};\r\n\r\nconst getDates = (miliseconds) => {\r\n    const dates = [];\r\n    const completeDate = new Date(miliseconds * 1000);\r\n    const year = completeDate.getFullYear();\r\n    const month = completeDate.getMonth() + 1;\r\n    const day = completeDate.getDate();\r\n    const date = `${day}-${month}-${year}`;\r\n    if (!dates.includes(date)) {\r\n        dates.push(date)\r\n    }\r\n    return (dates)\r\n};\r\n\r\nconst loadTable = (list) => {\r\n    return (list && list.map((infected) => (\r\n        <tr key={infected.id} style={{ backgroundColor: `${infected.live ? \"white\" : \"rgba(255, 99, 132, 0.4)\"}` }}>\r\n            <td>{infected.infect_date}</td>\r\n            <td>{infected.first_name}</td>\r\n            <td>{infected.last_name}</td>\r\n            <td>{infected.age}</td>\r\n            <td>{infected.country}</td>\r\n            <td>{infected.gendre}</td>\r\n        </tr>\r\n    )))\r\n};\r\n\r\n\r\nexport { getCurrentDate, getDates, stringifyDate, loadTable }"]},"metadata":{},"sourceType":"module"}